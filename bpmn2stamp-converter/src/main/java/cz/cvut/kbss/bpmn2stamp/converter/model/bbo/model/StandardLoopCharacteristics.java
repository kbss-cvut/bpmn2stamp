
package cz.cvut.kbss.bpmn2stamp.converter.model.bbo.model;

import cz.cvut.kbss.bpmn2stamp.converter.model.bbo.Vocabulary;
import cz.cvut.kbss.jopa.model.annotations.*;

import java.io.Serializable;
import java.util.Set;


/**
 * The StandardLoopCharacteristics class defines looping behavior based on a boolean condition. The Activity will loop as long as the boolean condition is true. The condition is evaluated for every loop iteration, and MAY be evaluated at the beginning or at the end of the iteration. In addition, a numeric cap can be optionally specified. The number of iterations MAY NOT exceed this cap.
 * 
 * This class was generated by OWL2Java 0.16.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_StandardLoopCharacteristics)
public class StandardLoopCharacteristics
    extends LoopCharacteristics
    implements Serializable
{

    /**
     * A boolean Expression that controls the loop. The Activity will only loop as long as this condition is true. The looping behavior MAY be underspecified, meaning that the modeler can simply document the condition, in which case the loop cannot be formally executed.
     * 
     */
    @OWLObjectProperty(cascade = CascadeType.PERSIST, iri = Vocabulary.s_p_has_loopCondition)
    @ParticipationConstraints({
//        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Expression, max = 1)
    })
    protected Expression has_loopCondition;
    /**
     * Serves as a cap on the number of iterations.
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_loopMaximum)
    @ParticipationConstraints({
//        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> loopMaximum;

    public void setHas_loopCondition(Expression has_loopCondition) {
        this.has_loopCondition = has_loopCondition;
    }

    public Expression getHas_loopCondition() {
        return has_loopCondition;
    }

    public void setLoopMaximum(Set<String> loopMaximum) {
        this.loopMaximum = loopMaximum;
    }

    public Set<String> getLoopMaximum() {
        return loopMaximum;
    }

}
