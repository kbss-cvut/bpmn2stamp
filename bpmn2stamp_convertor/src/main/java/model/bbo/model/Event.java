
package model.bbo.model;

import cz.cvut.kbss.jopa.model.annotations.CascadeType;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import model.bbo.Vocabulary;

import java.io.Serializable;
import java.util.Set;


/**
 * An Event is something that “happens” during the course of a Process. These Events affect the flow of the Process and usually have a cause or an impact and in general require or allow for a reaction. The term “event” is general enough to cover many things in a Process. The start of an Activity, the end of an Activity, the change of state of a document, a Message that arrives, etc., all could be considered Events.
 * 
 * This class was generated by OWL2Java 0.16.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_Event)
public class Event
    extends FlowNode
    implements Serializable
{

    //TODO [review] manually added
    @OWLObjectProperty(cascade = CascadeType.PERSIST, iri = Vocabulary.s_p_has_eventDefinition)
//    @ParticipationConstraints({
////            @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_EventDefinition, max = 1)
//    })
    protected Set<EventDefinition> has_eventDefinition;

    public Set<EventDefinition> getHas_eventDefinition() {
        return has_eventDefinition;
    }

    public void setHas_eventDefinition(Set<EventDefinition> has_eventDefinition) {
        this.has_eventDefinition = has_eventDefinition;
    }
}
