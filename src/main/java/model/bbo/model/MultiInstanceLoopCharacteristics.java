
package model.bbo.model;

import java.io.Serializable;
import java.util.Set;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import model.bbo.Vocabulary;


/**
 * The MultiInstanceLoopCharacteristics class allows for creation of a desired number of Activity instances. The instances MAY execute in parallel or MAY be sequential. Either an Expression is used to specify or calculate the desired number of instances or a data driven setup can be used. In that case a data input can be specified, which is able to handle a collection of data. The number of items in the collection determines the number of Activity instances. This data input can be produced by an input Data Association. The modeler can also configure this loop to control the tokens produced.
 * 
 * This class was generated by OWL2Java 0.16.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_MultiInstanceLoopCharacteristics)
public class MultiInstanceLoopCharacteristics
    extends LoopCharacteristics
    implements Serializable
{

    /**
     * This attribute defines a boolean Expression that when evaluated to true, cancels the remaining Activity instances and produces a token.
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_has_completionCondition)
    @ParticipationConstraints({
//        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Expression, max = 1)
    })
    protected Expression has_completionCondition;
    @OWLObjectProperty(iri = Vocabulary.s_p_has_inputResourceItem)
    @ParticipationConstraints({
//        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Resource, max = 1)
    })
    protected Resource has_inputResourceItem;
    @OWLObjectProperty(iri = Vocabulary.s_p_has_loopCardinality)
    @ParticipationConstraints({
//        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Expression, max = 1)
    })
    protected Expression has_loopCardinality;
    @OWLObjectProperty(iri = Vocabulary.s_p_has_loopResourceInputRef)
    @ParticipationConstraints({
//        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_ResourceCollection, max = 1)
    })
    protected Set<Thing> has_loopResourceInputRef;
    @OWLObjectProperty(iri = Vocabulary.s_p_has_loopResourceOutputRef)
    @ParticipationConstraints({
//        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_ResourceCollection, max = 1)
    })
    protected ResourceCollection has_loopResourceOutputRef;
    @OWLObjectProperty(iri = Vocabulary.s_p_has_noneBehaviorEventRef)
    @ParticipationConstraints({
//        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_EventDefinition, max = 1)
    })
    protected Set<Thing> has_noneBehaviorEventRef;
    /**
     * The EventDefinition which is thrown when behavior is set to one and the first internal Activity instance has completed.
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_has_oneBehaviorEventRef)
    @ParticipationConstraints({
//        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_EventDefinition, max = 1)
    })
    protected Set<Thing> has_oneBehaviorEventRef;
    @OWLObjectProperty(iri = Vocabulary.s_p_has_outputResourceItem)
    @ParticipationConstraints({
//        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Resource, max = 1)
    })
    protected Resource has_outputResourceItem;

    public void setHas_completionCondition(Expression has_completionCondition) {
        this.has_completionCondition = has_completionCondition;
    }

    public Expression getHas_completionCondition() {
        return has_completionCondition;
    }

    public void setHas_inputResourceItem(Resource has_inputResourceItem) {
        this.has_inputResourceItem = has_inputResourceItem;
    }

    public Resource getHas_inputResourceItem() {
        return has_inputResourceItem;
    }

    public void setHas_loopCardinality(Expression has_loopCardinality) {
        this.has_loopCardinality = has_loopCardinality;
    }

    public Expression getHas_loopCardinality() {
        return has_loopCardinality;
    }

    public void setHas_loopResourceInputRef(Set<Thing> has_loopResourceInputRef) {
        this.has_loopResourceInputRef = has_loopResourceInputRef;
    }

    public Set<Thing> getHas_loopResourceInputRef() {
        return has_loopResourceInputRef;
    }

    public void setHas_loopResourceOutputRef(ResourceCollection has_loopResourceOutputRef) {
        this.has_loopResourceOutputRef = has_loopResourceOutputRef;
    }

    public ResourceCollection getHas_loopResourceOutputRef() {
        return has_loopResourceOutputRef;
    }

    public void setHas_noneBehaviorEventRef(Set<Thing> has_noneBehaviorEventRef) {
        this.has_noneBehaviorEventRef = has_noneBehaviorEventRef;
    }

    public Set<Thing> getHas_noneBehaviorEventRef() {
        return has_noneBehaviorEventRef;
    }

    public void setHas_oneBehaviorEventRef(Set<Thing> has_oneBehaviorEventRef) {
        this.has_oneBehaviorEventRef = has_oneBehaviorEventRef;
    }

    public Set<Thing> getHas_oneBehaviorEventRef() {
        return has_oneBehaviorEventRef;
    }

    public void setHas_outputResourceItem(Resource has_outputResourceItem) {
        this.has_outputResourceItem = has_outputResourceItem;
    }

    public Resource getHas_outputResourceItem() {
        return has_outputResourceItem;
    }

}
