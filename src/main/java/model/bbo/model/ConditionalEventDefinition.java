
package model.bbo.model;

import java.io.Serializable;
import java.util.Set;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import model.bbo.Vocabulary;


/**
 * /
 * 
 * This class was generated by OWL2Java 0.16.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_ConditionalEventDefinition)
public class ConditionalEventDefinition
    extends EventDefinition
    implements Serializable
{

    /**
     * This relation has two source concepts. The definition is related to the source concept: (1) conditionalEventDefinition: The Expression might be underspecified and provided in the form of natural language. For executable Processes (isExecutable = true), if the trigger is Conditional, then a FormalExpression MUST be entered. (2) complexBehaviorDefinition: This attribute defines a boolean Expression that when evaluated to true, cancels the remaining Activity instances and produces a token.
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_has_condition)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Expression, min = 1, max = 1)
    })
    protected Set<Thing> has_condition;

    public void setHas_condition(Set<Thing> has_condition) {
        this.has_condition = has_condition;
    }

    public Set<Thing> getHas_condition() {
        return has_condition;
    }

}
