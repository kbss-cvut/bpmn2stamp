
package model.bbo.model;

import java.io.Serializable;
import java.util.Set;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import model.bbo.Vocabulary;


/**
 * EventBasedSubProcess
 * 
 * This class was generated by OWL2Java 0.16.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_EventSubProcess)
public class EventSubProcess
    extends SubProcess
    implements Serializable
{

    /**
     * This association specifies the particular flow elements contained in a
     * FlowElementContainer. Flow elements are Events, Gateways, Sequence
     * Flows, Activities, Data Objects, Data Associations, and Choreography
     * Activities.
     * 
     */
    //TODO [review] shouldn't be here, according to ontology this should be defined in FlowElementContainer
    @OWLObjectProperty(iri = Vocabulary.s_p_has_flowElements)
    @ParticipationConstraints({
//        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_EventSubProcessStartEvent, min = 1, max = 1)
    })
    protected Set<Thing> has_flowElements;
    /**
     * identifies the outgoing Sequence Flow of the FlowNode.
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_has_outgoing)
    protected Set<SequenceFlow> has_outgoing;

    public void setHas_flowElements(Set<Thing> has_flowElements) {
        this.has_flowElements = has_flowElements;
    }

    public Set<Thing> getHas_flowElements() {
        return has_flowElements;
    }

    public void setHas_outgoing(Set<SequenceFlow> has_outgoing) {
        this.has_outgoing = has_outgoing;
    }

    public Set<SequenceFlow> getHas_outgoing() {
        return has_outgoing;
    }

}
