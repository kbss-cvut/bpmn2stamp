
package model.bbo.model;

import java.io.Serializable;
import java.util.Set;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import model.bbo.Vocabulary;


/**
 * Gateways are used to control how Sequence Flows interact as they converge and diverge within a Process. If the flow does not need to be controlled, then a Gateway is not needed. The term “Gateway” implies that there is a gating mechanism that either allows or disallows passage through the Gateway--that is, as tokens arrive at a Gateway, they can be merged together on input and/or split apart on output as the Gateway mechanisms are invoked.
 * 
 * This class was generated by OWL2Java 0.16.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_Gateway)
public class Gateway
    extends FlowNode
    implements Serializable
{

    /**
     * identifies the outgoing Sequence Flow of the FlowNode.
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_has_outgoing)
    protected Set<SequenceFlow> has_outgoing;

    public void setHas_outgoing(Set<SequenceFlow> has_outgoing) {
        this.has_outgoing = has_outgoing;
    }

    public Set<SequenceFlow> getHas_outgoing() {
        return has_outgoing;
    }

}
